Terminals which are not used

   IN
   PACKED
   SET
   WITH


State 53 conflicts: 2 shift/reduce
State 185 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_head routine DOT

    2 program_head: PROGRAM NAME SEMI

    3 routine: routine_head routine_body

    4 sub_routine: routine_head routine_body

    5 routine_head: label_part const_part type_part var_part routine_part

    6 label_part: epsilon

    7 const_part: CONST const_expr_list
    8           | epsilon

    9 const_expr_list: const_expr_list NAME EQUAL const_value SEMI
   10                | NAME EQUAL const_value SEMI

   11 const_value: INTEGER
   12            | REAL
   13            | CHAR
   14            | STRING
   15            | SYS_CON

   16 type_part: TYPE type_decl_list
   17          | epsilon

   18 type_decl_list: type_decl_list type_definition
   19               | type_definition

   20 type_definition: NAME EQUAL type_decl SEMI

   21 type_decl: simple_type_decl
   22          | array_type_decl
   23          | record_type_decl

   24 simple_type_decl: SYS_TYPE
   25                 | NAME
   26                 | LP name_list RP
   27                 | const_value DOTDOT const_value
   28                 | MINUS const_value DOTDOT const_value
   29                 | MINUS const_value DOTDOT MINUS const_value
   30                 | NAME DOTDOT NAME

   31 array_type_decl: ARRAY LB simple_type_decl RB OF type_decl

   32 record_type_decl: RECORD field_decl_list END

   33 field_decl_list: field_decl_list field_decl
   34                | field_decl

   35 field_decl: name_list COLON type_decl SEMI

   36 name_list: name_list COMMA NAME
   37          | NAME

   38 var_part: VAR var_decl_list
   39         | epsilon

   40 var_decl_list: var_decl_list var_decl
   41              | var_decl

   42 var_decl: name_list COLON type_decl SEMI

   43 routine_part: routine_part function_decl
   44             | routine_part procedure_decl
   45             | function_decl
   46             | procedure_decl
   47             | epsilon

   48 function_decl: function_head SEMI sub_routine SEMI

   49 function_head: FUNCTION NAME parameters COLON simple_type_decl

   50 procedure_decl: procedure_head SEMI sub_routine SEMI

   51 procedure_head: PROCEDURE NAME parameters

   52 parameters: LP para_decl_list RP
   53           | epsilon

   54 para_decl_list: para_decl_list SEMI para_type_list
   55               | para_type_list

   56 para_type_list: var_para_list COLON simple_type_decl
   57               | val_para_list COLON simple_type_decl

   58 var_para_list: VAR name_list

   59 val_para_list: name_list

   60 routine_body: compound_stmt

   61 compound_stmt: BEGIN_T stmt_list END

   62 stmt_list: stmt_list stmt SEMI
   63          | epsilon

   64 stmt: INTEGER COLON non_label_stmt
   65     | non_label_stmt

   66 non_label_stmt: assign_stmt
   67               | proc_stmt
   68               | compound_stmt
   69               | if_stmt
   70               | repeat_stmt
   71               | while_stmt
   72               | for_stmt
   73               | case_stmt
   74               | goto_stmt

   75 assign_stmt: NAME ASSIGN expression
   76            | NAME LB expression RB ASSIGN expression
   77            | NAME DOT NAME ASSIGN expression

   78 proc_stmt: NAME
   79          | NAME LP args_list RP
   80          | SYS_PROC
   81          | SYS_PROC LP expression_list RP
   82          | READ LP factor RP

   83 if_stmt: IF expression THEN stmt else_clause

   84 else_clause: ELSE stmt
   85            | epsilon

   86 repeat_stmt: REPEAT stmt_list UNTIL expression

   87 while_stmt: WHILE expression DO stmt

   88 for_stmt: FOR NAME ASSIGN expression direction expression DO stmt

   89 direction: TO
   90          | DOWNTO

   91 case_stmt: CASE expression OF case_expr_list END

   92 case_expr_list: case_expr_list case_expr
   93               | case_expr

   94 case_expr: const_value COLON stmt SEMI
   95          | NAME COLON stmt SEMI

   96 goto_stmt: GOTO INTEGER

   97 expression_list: expression_list COMMA expression
   98                | expression

   99 expression: expression GE expr
  100           | expression GT expr
  101           | expression LE expr
  102           | expression LT expr
  103           | expression EQUAL expr
  104           | expression UNEQUAL expr
  105           | expr

  106 expr: expr PLUS term
  107     | expr MINUS term
  108     | expr OR term
  109     | term

  110 term: term MUL factor
  111     | term DIV factor
  112     | term MOD factor
  113     | term AND factor
  114     | factor

  115 factor: NAME
  116       | NAME LP args_list RP
  117       | SYS_FUNCT
  118       | SYS_FUNCT LP args_list RP
  119       | const_value
  120       | LP expression RP
  121       | NOT factor
  122       | MINUS factor
  123       | NAME LB expression RB
  124       | NAME DOT NAME

  125 args_list: args_list COMMA expression
  126          | expression

  127 epsilon: /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
NAME (258) 2 9 10 20 25 30 36 37 49 51 75 76 77 78 79 88 95 115 116
    123 124
LP (259) 26 52 79 81 82 116 118 120
RP (260) 26 52 79 81 82 116 118 120
LB (261) 31 76 123
RB (262) 31 76 123
DOT (263) 1 77 124
COMMA (264) 36 97 125
COLON (265) 35 42 49 56 57 64 94 95
MUL (266) 110
DIV (267) 111
UNEQUAL (268) 104
NOT (269) 121
PLUS (270) 106
MINUS (271) 28 29 107 122
GE (272) 99
GT (273) 100
LE (274) 101
LT (275) 102
EQUAL (276) 9 10 20 103
ASSIGN (277) 75 76 77 88
MOD (278) 112
DOTDOT (279) 27 28 29 30
SEMI (280) 2 9 10 20 35 42 48 50 54 62 94 95
SYS_CON (281) 15
SYS_FUNCT (282) 117 118
SYS_PROC (283) 80 81
SYS_TYPE (284) 24
READ (285) 82
INTEGER (286) 11 64 96
REAL (287) 12
CHAR (288) 13
STRING (289) 14
AND (290) 113
ARRAY (291) 31
BEGIN_T (292) 61
CASE (293) 91
CONST (294) 7
DO (295) 87 88
DOWNTO (296) 90
ELSE (297) 84
END (298) 32 61 91
FOR (299) 88
FUNCTION (300) 49
GOTO (301) 96
IF (302) 83
IN (303)
OF (304) 31 91
OR (305) 108
PACKED (306)
PROCEDURE (307) 51
PROGRAM (308) 2
RECORD (309) 32
REPEAT (310) 86
SET (311)
THEN (312) 83
TO (313) 89
TYPE (314) 16
UNTIL (315) 86
VAR (316) 38 58
WHILE (317) 87
WITH (318)


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1, on right: 0
program_head (66)
    on left: 2, on right: 1
routine (67)
    on left: 3, on right: 1
sub_routine (68)
    on left: 4, on right: 48 50
routine_head (69)
    on left: 5, on right: 3 4
label_part (70)
    on left: 6, on right: 5
const_part (71)
    on left: 7 8, on right: 5
const_expr_list (72)
    on left: 9 10, on right: 7 9
const_value (73)
    on left: 11 12 13 14 15, on right: 9 10 27 28 29 94 119
type_part (74)
    on left: 16 17, on right: 5
type_decl_list (75)
    on left: 18 19, on right: 16 18
type_definition (76)
    on left: 20, on right: 18 19
type_decl (77)
    on left: 21 22 23, on right: 20 31 35 42
simple_type_decl (78)
    on left: 24 25 26 27 28 29 30, on right: 21 31 49 56 57
array_type_decl (79)
    on left: 31, on right: 22
record_type_decl (80)
    on left: 32, on right: 23
field_decl_list (81)
    on left: 33 34, on right: 32 33
field_decl (82)
    on left: 35, on right: 33 34
name_list (83)
    on left: 36 37, on right: 26 35 36 42 58 59
var_part (84)
    on left: 38 39, on right: 5
var_decl_list (85)
    on left: 40 41, on right: 38 40
var_decl (86)
    on left: 42, on right: 40 41
routine_part (87)
    on left: 43 44 45 46 47, on right: 5 43 44
function_decl (88)
    on left: 48, on right: 43 45
function_head (89)
    on left: 49, on right: 48
procedure_decl (90)
    on left: 50, on right: 44 46
procedure_head (91)
    on left: 51, on right: 50
parameters (92)
    on left: 52 53, on right: 49 51
para_decl_list (93)
    on left: 54 55, on right: 52 54
para_type_list (94)
    on left: 56 57, on right: 54 55
var_para_list (95)
    on left: 58, on right: 56
val_para_list (96)
    on left: 59, on right: 57
routine_body (97)
    on left: 60, on right: 3 4
compound_stmt (98)
    on left: 61, on right: 60 68
stmt_list (99)
    on left: 62 63, on right: 61 62 86
stmt (100)
    on left: 64 65, on right: 62 83 84 87 88 94 95
non_label_stmt (101)
    on left: 66 67 68 69 70 71 72 73 74, on right: 64 65
assign_stmt (102)
    on left: 75 76 77, on right: 66
proc_stmt (103)
    on left: 78 79 80 81 82, on right: 67
if_stmt (104)
    on left: 83, on right: 69
else_clause (105)
    on left: 84 85, on right: 83
repeat_stmt (106)
    on left: 86, on right: 70
while_stmt (107)
    on left: 87, on right: 71
for_stmt (108)
    on left: 88, on right: 72
direction (109)
    on left: 89 90, on right: 88
case_stmt (110)
    on left: 91, on right: 73
case_expr_list (111)
    on left: 92 93, on right: 91 92
case_expr (112)
    on left: 94 95, on right: 92 93
goto_stmt (113)
    on left: 96, on right: 74
expression_list (114)
    on left: 97 98, on right: 81 97
expression (115)
    on left: 99 100 101 102 103 104 105, on right: 75 76 77 83 86 87
    88 91 97 98 99 100 101 102 103 104 120 123 125 126
expr (116)
    on left: 106 107 108 109, on right: 99 100 101 102 103 104 105
    106 107 108
term (117)
    on left: 110 111 112 113 114, on right: 106 107 108 109 110 111
    112 113
factor (118)
    on left: 115 116 117 118 119 120 121 122 123 124,
    on right: 82 110 111 112 113 114 121 122
args_list (119)
    on left: 125 126, on right: 79 116 118 125
epsilon (120)
    on left: 127, on right: 6 8 17 39 47 53 63 85


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program       go to state 2
    program_head  go to state 3


state 1

    2 program_head: PROGRAM . NAME SEMI

    NAME  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: program_head . routine DOT

    $default  reduce using rule 127 (epsilon)

    routine       go to state 6
    routine_head  go to state 7
    label_part    go to state 8
    epsilon       go to state 9


state 4

    2 program_head: PROGRAM NAME . SEMI

    SEMI  shift, and go to state 10


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: program_head routine . DOT

    DOT  shift, and go to state 11


state 7

    3 routine: routine_head . routine_body

    BEGIN_T  shift, and go to state 12

    routine_body   go to state 13
    compound_stmt  go to state 14


state 8

    5 routine_head: label_part . const_part type_part var_part routine_part

    CONST  shift, and go to state 15

    $default  reduce using rule 127 (epsilon)

    const_part  go to state 16
    epsilon     go to state 17


state 9

    6 label_part: epsilon .

    $default  reduce using rule 6 (label_part)


state 10

    2 program_head: PROGRAM NAME SEMI .

    $default  reduce using rule 2 (program_head)


state 11

    1 program: program_head routine DOT .

    $default  reduce using rule 1 (program)


state 12

   61 compound_stmt: BEGIN_T . stmt_list END

    $default  reduce using rule 127 (epsilon)

    stmt_list  go to state 18
    epsilon    go to state 19


state 13

    3 routine: routine_head routine_body .

    $default  reduce using rule 3 (routine)


state 14

   60 routine_body: compound_stmt .

    $default  reduce using rule 60 (routine_body)


state 15

    7 const_part: CONST . const_expr_list

    NAME  shift, and go to state 20

    const_expr_list  go to state 21


state 16

    5 routine_head: label_part const_part . type_part var_part routine_part

    TYPE  shift, and go to state 22

    $default  reduce using rule 127 (epsilon)

    type_part  go to state 23
    epsilon    go to state 24


state 17

    8 const_part: epsilon .

    $default  reduce using rule 8 (const_part)


state 18

   61 compound_stmt: BEGIN_T stmt_list . END
   62 stmt_list: stmt_list . stmt SEMI

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    INTEGER   shift, and go to state 28
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    END       shift, and go to state 30
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    stmt            go to state 37
    non_label_stmt  go to state 38
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 19

   63 stmt_list: epsilon .

    $default  reduce using rule 63 (stmt_list)


state 20

   10 const_expr_list: NAME . EQUAL const_value SEMI

    EQUAL  shift, and go to state 47


state 21

    7 const_part: CONST const_expr_list .
    9 const_expr_list: const_expr_list . NAME EQUAL const_value SEMI

    NAME  shift, and go to state 48

    $default  reduce using rule 7 (const_part)


state 22

   16 type_part: TYPE . type_decl_list

    NAME  shift, and go to state 49

    type_decl_list   go to state 50
    type_definition  go to state 51


state 23

    5 routine_head: label_part const_part type_part . var_part routine_part

    VAR  shift, and go to state 52

    $default  reduce using rule 127 (epsilon)

    var_part  go to state 53
    epsilon   go to state 54


state 24

   17 type_part: epsilon .

    $default  reduce using rule 17 (type_part)


state 25

   75 assign_stmt: NAME . ASSIGN expression
   76            | NAME . LB expression RB ASSIGN expression
   77            | NAME . DOT NAME ASSIGN expression
   78 proc_stmt: NAME .
   79          | NAME . LP args_list RP

    LP      shift, and go to state 55
    LB      shift, and go to state 56
    DOT     shift, and go to state 57
    ASSIGN  shift, and go to state 58

    $default  reduce using rule 78 (proc_stmt)


state 26

   80 proc_stmt: SYS_PROC .
   81          | SYS_PROC . LP expression_list RP

    LP  shift, and go to state 59

    $default  reduce using rule 80 (proc_stmt)


state 27

   82 proc_stmt: READ . LP factor RP

    LP  shift, and go to state 60


state 28

   64 stmt: INTEGER . COLON non_label_stmt

    COLON  shift, and go to state 61


state 29

   91 case_stmt: CASE . expression OF case_expr_list END

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 73
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 30

   61 compound_stmt: BEGIN_T stmt_list END .

    $default  reduce using rule 61 (compound_stmt)


state 31

   88 for_stmt: FOR . NAME ASSIGN expression direction expression DO stmt

    NAME  shift, and go to state 77


state 32

   96 goto_stmt: GOTO . INTEGER

    INTEGER  shift, and go to state 78


state 33

   83 if_stmt: IF . expression THEN stmt else_clause

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 79
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 34

   86 repeat_stmt: REPEAT . stmt_list UNTIL expression

    $default  reduce using rule 127 (epsilon)

    stmt_list  go to state 80
    epsilon    go to state 19


state 35

   87 while_stmt: WHILE . expression DO stmt

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 81
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 36

   68 non_label_stmt: compound_stmt .

    $default  reduce using rule 68 (non_label_stmt)


state 37

   62 stmt_list: stmt_list stmt . SEMI

    SEMI  shift, and go to state 82


state 38

   65 stmt: non_label_stmt .

    $default  reduce using rule 65 (stmt)


state 39

   66 non_label_stmt: assign_stmt .

    $default  reduce using rule 66 (non_label_stmt)


state 40

   67 non_label_stmt: proc_stmt .

    $default  reduce using rule 67 (non_label_stmt)


state 41

   69 non_label_stmt: if_stmt .

    $default  reduce using rule 69 (non_label_stmt)


state 42

   70 non_label_stmt: repeat_stmt .

    $default  reduce using rule 70 (non_label_stmt)


state 43

   71 non_label_stmt: while_stmt .

    $default  reduce using rule 71 (non_label_stmt)


state 44

   72 non_label_stmt: for_stmt .

    $default  reduce using rule 72 (non_label_stmt)


state 45

   73 non_label_stmt: case_stmt .

    $default  reduce using rule 73 (non_label_stmt)


state 46

   74 non_label_stmt: goto_stmt .

    $default  reduce using rule 74 (non_label_stmt)


state 47

   10 const_expr_list: NAME EQUAL . const_value SEMI

    SYS_CON  shift, and go to state 66
    INTEGER  shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    STRING   shift, and go to state 71

    const_value  go to state 83


state 48

    9 const_expr_list: const_expr_list NAME . EQUAL const_value SEMI

    EQUAL  shift, and go to state 84


state 49

   20 type_definition: NAME . EQUAL type_decl SEMI

    EQUAL  shift, and go to state 85


state 50

   16 type_part: TYPE type_decl_list .
   18 type_decl_list: type_decl_list . type_definition

    NAME  shift, and go to state 49

    $default  reduce using rule 16 (type_part)

    type_definition  go to state 86


state 51

   19 type_decl_list: type_definition .

    $default  reduce using rule 19 (type_decl_list)


state 52

   38 var_part: VAR . var_decl_list

    NAME  shift, and go to state 87

    name_list      go to state 88
    var_decl_list  go to state 89
    var_decl       go to state 90


state 53

    5 routine_head: label_part const_part type_part var_part . routine_part

    FUNCTION   shift, and go to state 91
    PROCEDURE  shift, and go to state 92

    FUNCTION   [reduce using rule 127 (epsilon)]
    PROCEDURE  [reduce using rule 127 (epsilon)]
    $default   reduce using rule 127 (epsilon)

    routine_part    go to state 93
    function_decl   go to state 94
    function_head   go to state 95
    procedure_decl  go to state 96
    procedure_head  go to state 97
    epsilon         go to state 98


state 54

   39 var_part: epsilon .

    $default  reduce using rule 39 (var_part)


state 55

   79 proc_stmt: NAME LP . args_list RP

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 99
    expr         go to state 74
    term         go to state 75
    factor       go to state 76
    args_list    go to state 100


state 56

   76 assign_stmt: NAME LB . expression RB ASSIGN expression

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 101
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 57

   77 assign_stmt: NAME DOT . NAME ASSIGN expression

    NAME  shift, and go to state 102


state 58

   75 assign_stmt: NAME ASSIGN . expression

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 103
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 59

   81 proc_stmt: SYS_PROC LP . expression_list RP

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value      go to state 72
    expression_list  go to state 104
    expression       go to state 105
    expr             go to state 74
    term             go to state 75
    factor           go to state 76


state 60

   82 proc_stmt: READ LP . factor RP

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    factor       go to state 106


state 61

   64 stmt: INTEGER COLON . non_label_stmt

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    non_label_stmt  go to state 107
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 62

  115 factor: NAME .
  116       | NAME . LP args_list RP
  123       | NAME . LB expression RB
  124       | NAME . DOT NAME

    LP   shift, and go to state 108
    LB   shift, and go to state 109
    DOT  shift, and go to state 110

    $default  reduce using rule 115 (factor)


state 63

  120 factor: LP . expression RP

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 111
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 64

  121 factor: NOT . factor

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    factor       go to state 112


state 65

  122 factor: MINUS . factor

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    factor       go to state 113


state 66

   15 const_value: SYS_CON .

    $default  reduce using rule 15 (const_value)


state 67

  117 factor: SYS_FUNCT .
  118       | SYS_FUNCT . LP args_list RP

    LP  shift, and go to state 114

    $default  reduce using rule 117 (factor)


state 68

   11 const_value: INTEGER .

    $default  reduce using rule 11 (const_value)


state 69

   12 const_value: REAL .

    $default  reduce using rule 12 (const_value)


state 70

   13 const_value: CHAR .

    $default  reduce using rule 13 (const_value)


state 71

   14 const_value: STRING .

    $default  reduce using rule 14 (const_value)


state 72

  119 factor: const_value .

    $default  reduce using rule 119 (factor)


state 73

   91 case_stmt: CASE expression . OF case_expr_list END
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120
    OF       shift, and go to state 121


state 74

  105 expression: expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    OR     shift, and go to state 124

    $default  reduce using rule 105 (expression)


state 75

  109 expr: term .
  110 term: term . MUL factor
  111     | term . DIV factor
  112     | term . MOD factor
  113     | term . AND factor

    MUL  shift, and go to state 125
    DIV  shift, and go to state 126
    MOD  shift, and go to state 127
    AND  shift, and go to state 128

    $default  reduce using rule 109 (expr)


state 76

  114 term: factor .

    $default  reduce using rule 114 (term)


state 77

   88 for_stmt: FOR NAME . ASSIGN expression direction expression DO stmt

    ASSIGN  shift, and go to state 129


state 78

   96 goto_stmt: GOTO INTEGER .

    $default  reduce using rule 96 (goto_stmt)


state 79

   83 if_stmt: IF expression . THEN stmt else_clause
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120
    THEN     shift, and go to state 130


state 80

   62 stmt_list: stmt_list . stmt SEMI
   86 repeat_stmt: REPEAT stmt_list . UNTIL expression

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    INTEGER   shift, and go to state 28
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    UNTIL     shift, and go to state 131
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    stmt            go to state 37
    non_label_stmt  go to state 38
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 81

   87 while_stmt: WHILE expression . DO stmt
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120
    DO       shift, and go to state 132


state 82

   62 stmt_list: stmt_list stmt SEMI .

    $default  reduce using rule 62 (stmt_list)


state 83

   10 const_expr_list: NAME EQUAL const_value . SEMI

    SEMI  shift, and go to state 133


state 84

    9 const_expr_list: const_expr_list NAME EQUAL . const_value SEMI

    SYS_CON  shift, and go to state 66
    INTEGER  shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    STRING   shift, and go to state 71

    const_value  go to state 134


state 85

   20 type_definition: NAME EQUAL . type_decl SEMI

    NAME      shift, and go to state 135
    LP        shift, and go to state 136
    MINUS     shift, and go to state 137
    SYS_CON   shift, and go to state 66
    SYS_TYPE  shift, and go to state 138
    INTEGER   shift, and go to state 68
    REAL      shift, and go to state 69
    CHAR      shift, and go to state 70
    STRING    shift, and go to state 71
    ARRAY     shift, and go to state 139
    RECORD    shift, and go to state 140

    const_value       go to state 141
    type_decl         go to state 142
    simple_type_decl  go to state 143
    array_type_decl   go to state 144
    record_type_decl  go to state 145


state 86

   18 type_decl_list: type_decl_list type_definition .

    $default  reduce using rule 18 (type_decl_list)


state 87

   37 name_list: NAME .

    $default  reduce using rule 37 (name_list)


state 88

   36 name_list: name_list . COMMA NAME
   42 var_decl: name_list . COLON type_decl SEMI

    COMMA  shift, and go to state 146
    COLON  shift, and go to state 147


state 89

   38 var_part: VAR var_decl_list .
   40 var_decl_list: var_decl_list . var_decl

    NAME  shift, and go to state 87

    $default  reduce using rule 38 (var_part)

    name_list  go to state 88
    var_decl   go to state 148


state 90

   41 var_decl_list: var_decl .

    $default  reduce using rule 41 (var_decl_list)


state 91

   49 function_head: FUNCTION . NAME parameters COLON simple_type_decl

    NAME  shift, and go to state 149


state 92

   51 procedure_head: PROCEDURE . NAME parameters

    NAME  shift, and go to state 150


state 93

    5 routine_head: label_part const_part type_part var_part routine_part .
   43 routine_part: routine_part . function_decl
   44             | routine_part . procedure_decl

    FUNCTION   shift, and go to state 91
    PROCEDURE  shift, and go to state 92

    $default  reduce using rule 5 (routine_head)

    function_decl   go to state 151
    function_head   go to state 95
    procedure_decl  go to state 152
    procedure_head  go to state 97


state 94

   45 routine_part: function_decl .

    $default  reduce using rule 45 (routine_part)


state 95

   48 function_decl: function_head . SEMI sub_routine SEMI

    SEMI  shift, and go to state 153


state 96

   46 routine_part: procedure_decl .

    $default  reduce using rule 46 (routine_part)


state 97

   50 procedure_decl: procedure_head . SEMI sub_routine SEMI

    SEMI  shift, and go to state 154


state 98

   47 routine_part: epsilon .

    $default  reduce using rule 47 (routine_part)


state 99

   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr
  126 args_list: expression .

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120

    $default  reduce using rule 126 (args_list)


state 100

   79 proc_stmt: NAME LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 155
    COMMA  shift, and go to state 156


state 101

   76 assign_stmt: NAME LB expression . RB ASSIGN expression
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    RB       shift, and go to state 157
    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120


state 102

   77 assign_stmt: NAME DOT NAME . ASSIGN expression

    ASSIGN  shift, and go to state 158


state 103

   75 assign_stmt: NAME ASSIGN expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120

    $default  reduce using rule 75 (assign_stmt)


state 104

   81 proc_stmt: SYS_PROC LP expression_list . RP
   97 expression_list: expression_list . COMMA expression

    RP     shift, and go to state 159
    COMMA  shift, and go to state 160


state 105

   98 expression_list: expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120

    $default  reduce using rule 98 (expression_list)


state 106

   82 proc_stmt: READ LP factor . RP

    RP  shift, and go to state 161


state 107

   64 stmt: INTEGER COLON non_label_stmt .

    $default  reduce using rule 64 (stmt)


state 108

  116 factor: NAME LP . args_list RP

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 99
    expr         go to state 74
    term         go to state 75
    factor       go to state 76
    args_list    go to state 162


state 109

  123 factor: NAME LB . expression RB

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 163
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 110

  124 factor: NAME DOT . NAME

    NAME  shift, and go to state 164


state 111

   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr
  120 factor: LP expression . RP

    RP       shift, and go to state 165
    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120


state 112

  121 factor: NOT factor .

    $default  reduce using rule 121 (factor)


state 113

  122 factor: MINUS factor .

    $default  reduce using rule 122 (factor)


state 114

  118 factor: SYS_FUNCT LP . args_list RP

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 99
    expr         go to state 74
    term         go to state 75
    factor       go to state 76
    args_list    go to state 166


state 115

  104 expression: expression UNEQUAL . expr

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expr         go to state 167
    term         go to state 75
    factor       go to state 76


state 116

   99 expression: expression GE . expr

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expr         go to state 168
    term         go to state 75
    factor       go to state 76


state 117

  100 expression: expression GT . expr

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expr         go to state 169
    term         go to state 75
    factor       go to state 76


state 118

  101 expression: expression LE . expr

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expr         go to state 170
    term         go to state 75
    factor       go to state 76


state 119

  102 expression: expression LT . expr

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expr         go to state 171
    term         go to state 75
    factor       go to state 76


state 120

  103 expression: expression EQUAL . expr

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expr         go to state 172
    term         go to state 75
    factor       go to state 76


state 121

   91 case_stmt: CASE expression OF . case_expr_list END

    NAME     shift, and go to state 173
    SYS_CON  shift, and go to state 66
    INTEGER  shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    STRING   shift, and go to state 71

    const_value     go to state 174
    case_expr_list  go to state 175
    case_expr       go to state 176


state 122

  106 expr: expr PLUS . term

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    term         go to state 177
    factor       go to state 76


state 123

  107 expr: expr MINUS . term

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    term         go to state 178
    factor       go to state 76


state 124

  108 expr: expr OR . term

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    term         go to state 179
    factor       go to state 76


state 125

  110 term: term MUL . factor

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    factor       go to state 180


state 126

  111 term: term DIV . factor

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    factor       go to state 181


state 127

  112 term: term MOD . factor

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    factor       go to state 182


state 128

  113 term: term AND . factor

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    factor       go to state 183


state 129

   88 for_stmt: FOR NAME ASSIGN . expression direction expression DO stmt

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 184
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 130

   83 if_stmt: IF expression THEN . stmt else_clause

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    INTEGER   shift, and go to state 28
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    stmt            go to state 185
    non_label_stmt  go to state 38
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 131

   86 repeat_stmt: REPEAT stmt_list UNTIL . expression

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 186
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 132

   87 while_stmt: WHILE expression DO . stmt

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    INTEGER   shift, and go to state 28
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    stmt            go to state 187
    non_label_stmt  go to state 38
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 133

   10 const_expr_list: NAME EQUAL const_value SEMI .

    $default  reduce using rule 10 (const_expr_list)


state 134

    9 const_expr_list: const_expr_list NAME EQUAL const_value . SEMI

    SEMI  shift, and go to state 188


state 135

   25 simple_type_decl: NAME .
   30                 | NAME . DOTDOT NAME

    DOTDOT  shift, and go to state 189

    $default  reduce using rule 25 (simple_type_decl)


state 136

   26 simple_type_decl: LP . name_list RP

    NAME  shift, and go to state 87

    name_list  go to state 190


state 137

   28 simple_type_decl: MINUS . const_value DOTDOT const_value
   29                 | MINUS . const_value DOTDOT MINUS const_value

    SYS_CON  shift, and go to state 66
    INTEGER  shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    STRING   shift, and go to state 71

    const_value  go to state 191


state 138

   24 simple_type_decl: SYS_TYPE .

    $default  reduce using rule 24 (simple_type_decl)


state 139

   31 array_type_decl: ARRAY . LB simple_type_decl RB OF type_decl

    LB  shift, and go to state 192


state 140

   32 record_type_decl: RECORD . field_decl_list END

    NAME  shift, and go to state 87

    field_decl_list  go to state 193
    field_decl       go to state 194
    name_list        go to state 195


state 141

   27 simple_type_decl: const_value . DOTDOT const_value

    DOTDOT  shift, and go to state 196


state 142

   20 type_definition: NAME EQUAL type_decl . SEMI

    SEMI  shift, and go to state 197


state 143

   21 type_decl: simple_type_decl .

    $default  reduce using rule 21 (type_decl)


state 144

   22 type_decl: array_type_decl .

    $default  reduce using rule 22 (type_decl)


state 145

   23 type_decl: record_type_decl .

    $default  reduce using rule 23 (type_decl)


state 146

   36 name_list: name_list COMMA . NAME

    NAME  shift, and go to state 198


state 147

   42 var_decl: name_list COLON . type_decl SEMI

    NAME      shift, and go to state 135
    LP        shift, and go to state 136
    MINUS     shift, and go to state 137
    SYS_CON   shift, and go to state 66
    SYS_TYPE  shift, and go to state 138
    INTEGER   shift, and go to state 68
    REAL      shift, and go to state 69
    CHAR      shift, and go to state 70
    STRING    shift, and go to state 71
    ARRAY     shift, and go to state 139
    RECORD    shift, and go to state 140

    const_value       go to state 141
    type_decl         go to state 199
    simple_type_decl  go to state 143
    array_type_decl   go to state 144
    record_type_decl  go to state 145


state 148

   40 var_decl_list: var_decl_list var_decl .

    $default  reduce using rule 40 (var_decl_list)


state 149

   49 function_head: FUNCTION NAME . parameters COLON simple_type_decl

    LP  shift, and go to state 200

    $default  reduce using rule 127 (epsilon)

    parameters  go to state 201
    epsilon     go to state 202


state 150

   51 procedure_head: PROCEDURE NAME . parameters

    LP  shift, and go to state 200

    $default  reduce using rule 127 (epsilon)

    parameters  go to state 203
    epsilon     go to state 202


state 151

   43 routine_part: routine_part function_decl .

    $default  reduce using rule 43 (routine_part)


state 152

   44 routine_part: routine_part procedure_decl .

    $default  reduce using rule 44 (routine_part)


state 153

   48 function_decl: function_head SEMI . sub_routine SEMI

    $default  reduce using rule 127 (epsilon)

    sub_routine   go to state 204
    routine_head  go to state 205
    label_part    go to state 8
    epsilon       go to state 9


state 154

   50 procedure_decl: procedure_head SEMI . sub_routine SEMI

    $default  reduce using rule 127 (epsilon)

    sub_routine   go to state 206
    routine_head  go to state 205
    label_part    go to state 8
    epsilon       go to state 9


state 155

   79 proc_stmt: NAME LP args_list RP .

    $default  reduce using rule 79 (proc_stmt)


state 156

  125 args_list: args_list COMMA . expression

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 207
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 157

   76 assign_stmt: NAME LB expression RB . ASSIGN expression

    ASSIGN  shift, and go to state 208


state 158

   77 assign_stmt: NAME DOT NAME ASSIGN . expression

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 209
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 159

   81 proc_stmt: SYS_PROC LP expression_list RP .

    $default  reduce using rule 81 (proc_stmt)


state 160

   97 expression_list: expression_list COMMA . expression

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 210
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 161

   82 proc_stmt: READ LP factor RP .

    $default  reduce using rule 82 (proc_stmt)


state 162

  116 factor: NAME LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 211
    COMMA  shift, and go to state 156


state 163

   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr
  123 factor: NAME LB expression . RB

    RB       shift, and go to state 212
    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120


state 164

  124 factor: NAME DOT NAME .

    $default  reduce using rule 124 (factor)


state 165

  120 factor: LP expression RP .

    $default  reduce using rule 120 (factor)


state 166

  118 factor: SYS_FUNCT LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 213
    COMMA  shift, and go to state 156


state 167

  104 expression: expression UNEQUAL expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    OR     shift, and go to state 124

    $default  reduce using rule 104 (expression)


state 168

   99 expression: expression GE expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    OR     shift, and go to state 124

    $default  reduce using rule 99 (expression)


state 169

  100 expression: expression GT expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    OR     shift, and go to state 124

    $default  reduce using rule 100 (expression)


state 170

  101 expression: expression LE expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    OR     shift, and go to state 124

    $default  reduce using rule 101 (expression)


state 171

  102 expression: expression LT expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    OR     shift, and go to state 124

    $default  reduce using rule 102 (expression)


state 172

  103 expression: expression EQUAL expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123
    OR     shift, and go to state 124

    $default  reduce using rule 103 (expression)


state 173

   95 case_expr: NAME . COLON stmt SEMI

    COLON  shift, and go to state 214


state 174

   94 case_expr: const_value . COLON stmt SEMI

    COLON  shift, and go to state 215


state 175

   91 case_stmt: CASE expression OF case_expr_list . END
   92 case_expr_list: case_expr_list . case_expr

    NAME     shift, and go to state 173
    SYS_CON  shift, and go to state 66
    INTEGER  shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    STRING   shift, and go to state 71
    END      shift, and go to state 216

    const_value  go to state 174
    case_expr    go to state 217


state 176

   93 case_expr_list: case_expr .

    $default  reduce using rule 93 (case_expr_list)


state 177

  106 expr: expr PLUS term .
  110 term: term . MUL factor
  111     | term . DIV factor
  112     | term . MOD factor
  113     | term . AND factor

    MUL  shift, and go to state 125
    DIV  shift, and go to state 126
    MOD  shift, and go to state 127
    AND  shift, and go to state 128

    $default  reduce using rule 106 (expr)


state 178

  107 expr: expr MINUS term .
  110 term: term . MUL factor
  111     | term . DIV factor
  112     | term . MOD factor
  113     | term . AND factor

    MUL  shift, and go to state 125
    DIV  shift, and go to state 126
    MOD  shift, and go to state 127
    AND  shift, and go to state 128

    $default  reduce using rule 107 (expr)


state 179

  108 expr: expr OR term .
  110 term: term . MUL factor
  111     | term . DIV factor
  112     | term . MOD factor
  113     | term . AND factor

    MUL  shift, and go to state 125
    DIV  shift, and go to state 126
    MOD  shift, and go to state 127
    AND  shift, and go to state 128

    $default  reduce using rule 108 (expr)


state 180

  110 term: term MUL factor .

    $default  reduce using rule 110 (term)


state 181

  111 term: term DIV factor .

    $default  reduce using rule 111 (term)


state 182

  112 term: term MOD factor .

    $default  reduce using rule 112 (term)


state 183

  113 term: term AND factor .

    $default  reduce using rule 113 (term)


state 184

   88 for_stmt: FOR NAME ASSIGN expression . direction expression DO stmt
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120
    DOWNTO   shift, and go to state 218
    TO       shift, and go to state 219

    direction  go to state 220


state 185

   83 if_stmt: IF expression THEN stmt . else_clause

    ELSE  shift, and go to state 221

    ELSE      [reduce using rule 127 (epsilon)]
    $default  reduce using rule 127 (epsilon)

    else_clause  go to state 222
    epsilon      go to state 223


state 186

   86 repeat_stmt: REPEAT stmt_list UNTIL expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120

    $default  reduce using rule 86 (repeat_stmt)


state 187

   87 while_stmt: WHILE expression DO stmt .

    $default  reduce using rule 87 (while_stmt)


state 188

    9 const_expr_list: const_expr_list NAME EQUAL const_value SEMI .

    $default  reduce using rule 9 (const_expr_list)


state 189

   30 simple_type_decl: NAME DOTDOT . NAME

    NAME  shift, and go to state 224


state 190

   26 simple_type_decl: LP name_list . RP
   36 name_list: name_list . COMMA NAME

    RP     shift, and go to state 225
    COMMA  shift, and go to state 146


state 191

   28 simple_type_decl: MINUS const_value . DOTDOT const_value
   29                 | MINUS const_value . DOTDOT MINUS const_value

    DOTDOT  shift, and go to state 226


state 192

   31 array_type_decl: ARRAY LB . simple_type_decl RB OF type_decl

    NAME      shift, and go to state 135
    LP        shift, and go to state 136
    MINUS     shift, and go to state 137
    SYS_CON   shift, and go to state 66
    SYS_TYPE  shift, and go to state 138
    INTEGER   shift, and go to state 68
    REAL      shift, and go to state 69
    CHAR      shift, and go to state 70
    STRING    shift, and go to state 71

    const_value       go to state 141
    simple_type_decl  go to state 227


state 193

   32 record_type_decl: RECORD field_decl_list . END
   33 field_decl_list: field_decl_list . field_decl

    NAME  shift, and go to state 87
    END   shift, and go to state 228

    field_decl  go to state 229
    name_list   go to state 195


state 194

   34 field_decl_list: field_decl .

    $default  reduce using rule 34 (field_decl_list)


state 195

   35 field_decl: name_list . COLON type_decl SEMI
   36 name_list: name_list . COMMA NAME

    COMMA  shift, and go to state 146
    COLON  shift, and go to state 230


state 196

   27 simple_type_decl: const_value DOTDOT . const_value

    SYS_CON  shift, and go to state 66
    INTEGER  shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    STRING   shift, and go to state 71

    const_value  go to state 231


state 197

   20 type_definition: NAME EQUAL type_decl SEMI .

    $default  reduce using rule 20 (type_definition)


state 198

   36 name_list: name_list COMMA NAME .

    $default  reduce using rule 36 (name_list)


state 199

   42 var_decl: name_list COLON type_decl . SEMI

    SEMI  shift, and go to state 232


state 200

   52 parameters: LP . para_decl_list RP

    NAME  shift, and go to state 87
    VAR   shift, and go to state 233

    name_list       go to state 234
    para_decl_list  go to state 235
    para_type_list  go to state 236
    var_para_list   go to state 237
    val_para_list   go to state 238


state 201

   49 function_head: FUNCTION NAME parameters . COLON simple_type_decl

    COLON  shift, and go to state 239


state 202

   53 parameters: epsilon .

    $default  reduce using rule 53 (parameters)


state 203

   51 procedure_head: PROCEDURE NAME parameters .

    $default  reduce using rule 51 (procedure_head)


state 204

   48 function_decl: function_head SEMI sub_routine . SEMI

    SEMI  shift, and go to state 240


state 205

    4 sub_routine: routine_head . routine_body

    BEGIN_T  shift, and go to state 12

    routine_body   go to state 241
    compound_stmt  go to state 14


state 206

   50 procedure_decl: procedure_head SEMI sub_routine . SEMI

    SEMI  shift, and go to state 242


state 207

   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr
  125 args_list: args_list COMMA expression .

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120

    $default  reduce using rule 125 (args_list)


state 208

   76 assign_stmt: NAME LB expression RB ASSIGN . expression

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 243
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 209

   77 assign_stmt: NAME DOT NAME ASSIGN expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120

    $default  reduce using rule 77 (assign_stmt)


state 210

   97 expression_list: expression_list COMMA expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120

    $default  reduce using rule 97 (expression_list)


state 211

  116 factor: NAME LP args_list RP .

    $default  reduce using rule 116 (factor)


state 212

  123 factor: NAME LB expression RB .

    $default  reduce using rule 123 (factor)


state 213

  118 factor: SYS_FUNCT LP args_list RP .

    $default  reduce using rule 118 (factor)


state 214

   95 case_expr: NAME COLON . stmt SEMI

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    INTEGER   shift, and go to state 28
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    stmt            go to state 244
    non_label_stmt  go to state 38
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 215

   94 case_expr: const_value COLON . stmt SEMI

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    INTEGER   shift, and go to state 28
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    stmt            go to state 245
    non_label_stmt  go to state 38
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 216

   91 case_stmt: CASE expression OF case_expr_list END .

    $default  reduce using rule 91 (case_stmt)


state 217

   92 case_expr_list: case_expr_list case_expr .

    $default  reduce using rule 92 (case_expr_list)


state 218

   90 direction: DOWNTO .

    $default  reduce using rule 90 (direction)


state 219

   89 direction: TO .

    $default  reduce using rule 89 (direction)


state 220

   88 for_stmt: FOR NAME ASSIGN expression direction . expression DO stmt

    NAME       shift, and go to state 62
    LP         shift, and go to state 63
    NOT        shift, and go to state 64
    MINUS      shift, and go to state 65
    SYS_CON    shift, and go to state 66
    SYS_FUNCT  shift, and go to state 67
    INTEGER    shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    STRING     shift, and go to state 71

    const_value  go to state 72
    expression   go to state 246
    expr         go to state 74
    term         go to state 75
    factor       go to state 76


state 221

   84 else_clause: ELSE . stmt

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    INTEGER   shift, and go to state 28
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    stmt            go to state 247
    non_label_stmt  go to state 38
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 222

   83 if_stmt: IF expression THEN stmt else_clause .

    $default  reduce using rule 83 (if_stmt)


state 223

   85 else_clause: epsilon .

    $default  reduce using rule 85 (else_clause)


state 224

   30 simple_type_decl: NAME DOTDOT NAME .

    $default  reduce using rule 30 (simple_type_decl)


state 225

   26 simple_type_decl: LP name_list RP .

    $default  reduce using rule 26 (simple_type_decl)


state 226

   28 simple_type_decl: MINUS const_value DOTDOT . const_value
   29                 | MINUS const_value DOTDOT . MINUS const_value

    MINUS    shift, and go to state 248
    SYS_CON  shift, and go to state 66
    INTEGER  shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    STRING   shift, and go to state 71

    const_value  go to state 249


state 227

   31 array_type_decl: ARRAY LB simple_type_decl . RB OF type_decl

    RB  shift, and go to state 250


state 228

   32 record_type_decl: RECORD field_decl_list END .

    $default  reduce using rule 32 (record_type_decl)


state 229

   33 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 33 (field_decl_list)


state 230

   35 field_decl: name_list COLON . type_decl SEMI

    NAME      shift, and go to state 135
    LP        shift, and go to state 136
    MINUS     shift, and go to state 137
    SYS_CON   shift, and go to state 66
    SYS_TYPE  shift, and go to state 138
    INTEGER   shift, and go to state 68
    REAL      shift, and go to state 69
    CHAR      shift, and go to state 70
    STRING    shift, and go to state 71
    ARRAY     shift, and go to state 139
    RECORD    shift, and go to state 140

    const_value       go to state 141
    type_decl         go to state 251
    simple_type_decl  go to state 143
    array_type_decl   go to state 144
    record_type_decl  go to state 145


state 231

   27 simple_type_decl: const_value DOTDOT const_value .

    $default  reduce using rule 27 (simple_type_decl)


state 232

   42 var_decl: name_list COLON type_decl SEMI .

    $default  reduce using rule 42 (var_decl)


state 233

   58 var_para_list: VAR . name_list

    NAME  shift, and go to state 87

    name_list  go to state 252


state 234

   36 name_list: name_list . COMMA NAME
   59 val_para_list: name_list .

    COMMA  shift, and go to state 146

    $default  reduce using rule 59 (val_para_list)


state 235

   52 parameters: LP para_decl_list . RP
   54 para_decl_list: para_decl_list . SEMI para_type_list

    RP    shift, and go to state 253
    SEMI  shift, and go to state 254


state 236

   55 para_decl_list: para_type_list .

    $default  reduce using rule 55 (para_decl_list)


state 237

   56 para_type_list: var_para_list . COLON simple_type_decl

    COLON  shift, and go to state 255


state 238

   57 para_type_list: val_para_list . COLON simple_type_decl

    COLON  shift, and go to state 256


state 239

   49 function_head: FUNCTION NAME parameters COLON . simple_type_decl

    NAME      shift, and go to state 135
    LP        shift, and go to state 136
    MINUS     shift, and go to state 137
    SYS_CON   shift, and go to state 66
    SYS_TYPE  shift, and go to state 138
    INTEGER   shift, and go to state 68
    REAL      shift, and go to state 69
    CHAR      shift, and go to state 70
    STRING    shift, and go to state 71

    const_value       go to state 141
    simple_type_decl  go to state 257


state 240

   48 function_decl: function_head SEMI sub_routine SEMI .

    $default  reduce using rule 48 (function_decl)


state 241

    4 sub_routine: routine_head routine_body .

    $default  reduce using rule 4 (sub_routine)


state 242

   50 procedure_decl: procedure_head SEMI sub_routine SEMI .

    $default  reduce using rule 50 (procedure_decl)


state 243

   76 assign_stmt: NAME LB expression RB ASSIGN expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120

    $default  reduce using rule 76 (assign_stmt)


state 244

   95 case_expr: NAME COLON stmt . SEMI

    SEMI  shift, and go to state 258


state 245

   94 case_expr: const_value COLON stmt . SEMI

    SEMI  shift, and go to state 259


state 246

   88 for_stmt: FOR NAME ASSIGN expression direction expression . DO stmt
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    UNEQUAL  shift, and go to state 115
    GE       shift, and go to state 116
    GT       shift, and go to state 117
    LE       shift, and go to state 118
    LT       shift, and go to state 119
    EQUAL    shift, and go to state 120
    DO       shift, and go to state 260


state 247

   84 else_clause: ELSE stmt .

    $default  reduce using rule 84 (else_clause)


state 248

   29 simple_type_decl: MINUS const_value DOTDOT MINUS . const_value

    SYS_CON  shift, and go to state 66
    INTEGER  shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    STRING   shift, and go to state 71

    const_value  go to state 261


state 249

   28 simple_type_decl: MINUS const_value DOTDOT const_value .

    $default  reduce using rule 28 (simple_type_decl)


state 250

   31 array_type_decl: ARRAY LB simple_type_decl RB . OF type_decl

    OF  shift, and go to state 262


state 251

   35 field_decl: name_list COLON type_decl . SEMI

    SEMI  shift, and go to state 263


state 252

   36 name_list: name_list . COMMA NAME
   58 var_para_list: VAR name_list .

    COMMA  shift, and go to state 146

    $default  reduce using rule 58 (var_para_list)


state 253

   52 parameters: LP para_decl_list RP .

    $default  reduce using rule 52 (parameters)


state 254

   54 para_decl_list: para_decl_list SEMI . para_type_list

    NAME  shift, and go to state 87
    VAR   shift, and go to state 233

    name_list       go to state 234
    para_type_list  go to state 264
    var_para_list   go to state 237
    val_para_list   go to state 238


state 255

   56 para_type_list: var_para_list COLON . simple_type_decl

    NAME      shift, and go to state 135
    LP        shift, and go to state 136
    MINUS     shift, and go to state 137
    SYS_CON   shift, and go to state 66
    SYS_TYPE  shift, and go to state 138
    INTEGER   shift, and go to state 68
    REAL      shift, and go to state 69
    CHAR      shift, and go to state 70
    STRING    shift, and go to state 71

    const_value       go to state 141
    simple_type_decl  go to state 265


state 256

   57 para_type_list: val_para_list COLON . simple_type_decl

    NAME      shift, and go to state 135
    LP        shift, and go to state 136
    MINUS     shift, and go to state 137
    SYS_CON   shift, and go to state 66
    SYS_TYPE  shift, and go to state 138
    INTEGER   shift, and go to state 68
    REAL      shift, and go to state 69
    CHAR      shift, and go to state 70
    STRING    shift, and go to state 71

    const_value       go to state 141
    simple_type_decl  go to state 266


state 257

   49 function_head: FUNCTION NAME parameters COLON simple_type_decl .

    $default  reduce using rule 49 (function_head)


state 258

   95 case_expr: NAME COLON stmt SEMI .

    $default  reduce using rule 95 (case_expr)


state 259

   94 case_expr: const_value COLON stmt SEMI .

    $default  reduce using rule 94 (case_expr)


state 260

   88 for_stmt: FOR NAME ASSIGN expression direction expression DO . stmt

    NAME      shift, and go to state 25
    SYS_PROC  shift, and go to state 26
    READ      shift, and go to state 27
    INTEGER   shift, and go to state 28
    BEGIN_T   shift, and go to state 12
    CASE      shift, and go to state 29
    FOR       shift, and go to state 31
    GOTO      shift, and go to state 32
    IF        shift, and go to state 33
    REPEAT    shift, and go to state 34
    WHILE     shift, and go to state 35

    compound_stmt   go to state 36
    stmt            go to state 267
    non_label_stmt  go to state 38
    assign_stmt     go to state 39
    proc_stmt       go to state 40
    if_stmt         go to state 41
    repeat_stmt     go to state 42
    while_stmt      go to state 43
    for_stmt        go to state 44
    case_stmt       go to state 45
    goto_stmt       go to state 46


state 261

   29 simple_type_decl: MINUS const_value DOTDOT MINUS const_value .

    $default  reduce using rule 29 (simple_type_decl)


state 262

   31 array_type_decl: ARRAY LB simple_type_decl RB OF . type_decl

    NAME      shift, and go to state 135
    LP        shift, and go to state 136
    MINUS     shift, and go to state 137
    SYS_CON   shift, and go to state 66
    SYS_TYPE  shift, and go to state 138
    INTEGER   shift, and go to state 68
    REAL      shift, and go to state 69
    CHAR      shift, and go to state 70
    STRING    shift, and go to state 71
    ARRAY     shift, and go to state 139
    RECORD    shift, and go to state 140

    const_value       go to state 141
    type_decl         go to state 268
    simple_type_decl  go to state 143
    array_type_decl   go to state 144
    record_type_decl  go to state 145


state 263

   35 field_decl: name_list COLON type_decl SEMI .

    $default  reduce using rule 35 (field_decl)


state 264

   54 para_decl_list: para_decl_list SEMI para_type_list .

    $default  reduce using rule 54 (para_decl_list)


state 265

   56 para_type_list: var_para_list COLON simple_type_decl .

    $default  reduce using rule 56 (para_type_list)


state 266

   57 para_type_list: val_para_list COLON simple_type_decl .

    $default  reduce using rule 57 (para_type_list)


state 267

   88 for_stmt: FOR NAME ASSIGN expression direction expression DO stmt .

    $default  reduce using rule 88 (for_stmt)


state 268

   31 array_type_decl: ARRAY LB simple_type_decl RB OF type_decl .

    $default  reduce using rule 31 (array_type_decl)
